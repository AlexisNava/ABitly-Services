version: 2.1

jobs:
  run_lint:
    docker:
      - image: circleci/python:3.6.8
    steps:
      - checkout
      - run:
          name: "Install dependencies"
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install -r requirements.txt
      - run:
          name: "Set Up Custom Env Variables"
          command: |
            . env/bin/activate
            echo "export FLASK_APP=abitly" >> $BASH_ENV
            echo "export POSTGRES_USERNAME=abitly" >> $BASH_ENV
            echo "export POSTGRES_PASSWORD=abitly2019" >> $BASH_ENV
            echo "export POSTGRES_DATABASE=abitlydb" >> $BASH_ENV
            echo "export POSTGRES_HOST=0.0.0.0" >> $BASH_ENV
            echo "export POSTGRES_PORT=5432" >> $BASH_ENV
            echo "export HOST=0.0.0.0" >> $BASH_ENV
            echo "export PORT=5000" >> $BASH_ENV
      - run:
          name: "Run Lint"
          command: |
            . env/bin/activate
            pip install -e .
            pytest --pylama abitly

  run_tests:
    docker:
      - image: circleci/python:3.6.8
      - image: postgres:10.3
        environment:
          POSTGRES_USER: abitly
          POSTGRES_PASSWORD: abitly2019
          POSTGRES_DB: abitlydb
    steps:
      - checkout
      - run:
          name: "Install dependencies"
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install -r requirements.txt
      - run:
          name: "Set Up Custom Env Variables"
          command: |
            . env/bin/activate
            echo "export FLASK_APP=abitly" >> $BASH_ENV
            echo "export POSTGRES_USERNAME=abitly" >> $BASH_ENV
            echo "export POSTGRES_PASSWORD=abitly2019" >> $BASH_ENV
            echo "export POSTGRES_DATABASE=abitlydb" >> $BASH_ENV
            echo "export POSTGRES_HOST=0.0.0.0" >> $BASH_ENV
            echo "export POSTGRES_PORT=5432" >> $BASH_ENV
            echo "export HOST=0.0.0.0" >> $BASH_ENV
            echo "export PORT=5000" >> $BASH_ENV
      - run:
          name: "Run Tests"
          command: |
            . env/bin/activate
            pip install -e .
            pytest -v

  publish_docker_image:
    docker:
      - image: docker:19.03.2
    steps:
      - checkout
      - setup_remote_docker:
          version: 18.09.3
          docker_layer_caching: true
      - run:
          name: "Docker Login"
          command: docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
      - run:
          name: "Docker Build"
          command: docker build -t $DOCKER_REPONAME .
      - run:
          name: "Tag Image"
          command: docker tag $DOCKER_REPONAME $DOCKER_USERNAME/$DOCKER_REPONAME
      - run:
          name: "Publish Image"
          command: docker push $DOCKER_USERNAME/$DOCKER_REPONAME

workflows:
  version: 2

  development:
    jobs:
      - run_lint:
          filters:
            branches:
              ignore: master
      - run_tests:
          filters:
            branches:
              ignore: master

  production:
    jobs:
      - run_lint:
          filters:
            branches:
              only: master
      - run_tests:
          filters:
            branches:
              only: master
      - publish_docker_image:
          requires:
            - run_lint
            - run_tests
          filters:
            branches:
              only: master
